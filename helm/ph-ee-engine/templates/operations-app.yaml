{{- if .Values.operations.enabled -}}

apiVersion: {{ .Values.deployment.apiversion }}
kind: Deployment
metadata:
  name: "ph-ee-operations-app"
  labels:
    app: ph-ee-operations-app
spec:
  replicas: {{ .Values.operations_app.replicas }}
  selector:
    matchLabels:
      app: ph-ee-operations-app
  template:
    metadata:
      labels:
        app: ph-ee-operations-app
      annotations:
{{- if .Values.operations_app.deployment.annotations }}
{{ toYaml .Values.operations_app.deployment.annotations | indent 8 }}
{{- end }}
    spec:
      containers:
        - name: ph-ee-operations-app
          image: "{{ .Values.operations_app.image }}:{{ .Values.operations_app.imageTag }}"
          imagePullPolicy: "{{ .Values.operations_app.imagePullPolicy }}"
          ports:
            - containerPort: 5000
          readinessProbe:
            httpGet:
              path: /oauth/token_key
              port: 5000
            periodSeconds: 30
            timeoutSeconds: 5
          resources:
            limits:
              memory: "{{ .Values.operations_app.limits.memory }}"
              cpu: "{{ .Values.operations_app.limits.cpu }}"
            requests:
              memory: "{{ .Values.operations_app.requests.memory }}"
              cpu: "{{ .Values.operations_app.requests.cpu }}"
          env:
            - name: "fienract_datasource_core_username"
              value: "{{ .Values.operations_app.datasource.username }}" 
            - name: "fineract_datasource_core_password"
              valueFrom:
                secretKeyRef:
                  name: "operations-app-secret"
                  key: "database-password"
            - name: "fineract_datasource_core_host"
              value: "{{ .Values.operations_app.datasource.host }}"
            - name: "fineract_datasource_core_port"
              value: "{{ .Values.operations_app.datasource.port }}"
            - name: "fineract_datasource_core_schema"
              value: "{{ .Values.operations_app.datasource.schema }}"
            - name: "spring_profiles_active"
              value: "{{ .Values.operations_app.springProfilesActive }}"
            - name: "token_client_channel_secret"
              value: "{{ .Values.operations_app.tokenClientChannelSecret }}"
            - name: "tenants"
              value: "{{ .Values.operations_app.tenants }}"
            - name: "logging_level_root"
              value: "{{ .Values.operations_app.loggingLevelRoot }}"
          volumeMounts:
            - name: ph-ee-config
              mountPath: "/config"
      initContainers:
        - name: wait-db
          image: jwilder/dockerize
          imagePullPolicy: IfNotPresent
          args:
            - -timeout=120s
            - -wait
            - tcp://{{ .Values.operations_app.datasource.host }}:3306
      volumes:
        - name: ph-ee-config
          configMap:
            name: ph-ee-config

---
apiVersion: {{ .Values.service.apiversion }}
kind: Service
metadata:
  labels:
    app: ph-ee-operations-app
  name: ph-ee-operations-app
spec:
  ports:
    - name: port
      port: 80
      protocol: TCP
      targetPort: 5000
  selector:
    app: ph-ee-operations-app
  sessionAffinity: None
  type: ClusterIP

---
apiVersion: {{ .Values.secret.apiversion }}
kind: Secret
metadata:
  name: operations-app-secret
type: Opaque
data:
  database-password: {{ .Values.operations_app.datasource.password | b64enc }}
---
{{- if .Values.operations_app.ingress.enabled }}
apiVersion: {{ .Values.ingress.apiversion }}
kind: Ingress
metadata:
  name: ph-ee-operations-app
  annotations:
{{- if .Values.operations_app.ingress.annotations }}
{{ toYaml .Values.operations_app.ingress.annotations | indent 4 }}
{{- end }}
spec:
  rules:
    - host: "{{ .Values.operations_app.hostname }}"
      http:
        paths:
          - path: "{{ .Values.operations_app.ingress.path }}"
            pathType: Prefix
            backend:
{{- if .Values.operations_app.ingress.backend }}
{{ toYaml .Values.operations_app.ingress.backend | indent 14 }}
{{- end }}              

  tls:
    - hosts:
        - "{{ .Values.wildcardhostname }}"
      secretName: "{{ .Values.tls }}"

---
apiVersion: {{ .Values.ingress.apiversion }}
kind: Ingress
metadata:
  name: ph-ee-identity
  annotations:
{{- if .Values.operations_app.ingress.annotations }}
{{ toYaml .Values.operations_app.ingress.annotations | indent 4 }}
{{- end }}
spec:
  rules:
    - host: "{{ .Values.operations_app.hostname }}"
      http:
        paths:
          - path: /identity
            pathType: Prefix
            backend:
{{- if .Values.operations_app.ingress.backend }}
{{ toYaml .Values.operations_app.ingress.backend | indent 14 }}
{{- end }} 

  tls:
    - hosts:
        - "{{ .Values.wildcardhostname }}"
      secretName: "{{ .Values.tls }}"
{{- end }}

{{- end }}
